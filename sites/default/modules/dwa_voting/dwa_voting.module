<?php

/**
 * @file
 * Provides voting logic for Favorite Website Awards.
 */
define('DWA_VOTING_SITE_TYPE_SOD', 1);
define('DWA_VOTING_SITE_TYPE_SOW', 2);
define('DWA_VOTING_SITE_TYPE_SOM', 3);

/**
 * Implements hook_block_info().
 */
function dwa_voting_block_info() {
  $blocks = array();
  
  $blocks['voting'] = array(
    'info' => t('Site Voting'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function dwa_voting_block_view($block_name = '') {
  switch ($block_name) {
    case 'voting':
      // Don't show this block on non-site nodes.
      if (arg(0) == 'node' && is_numeric(arg(1))) {
        $node = node_load(arg(1));
        if ($node->type != 'site') {
          return false;        
        }
      }
      
      // Determine node content.
      $block = array(
        'subject' => t('Vote for this Site'),
        'content' => 'Voting for ' . $node->title,
      );
      
      return $block;
  }
}



/**
 * Implements hook_flag().
 */
function dwa_voting_flag($action, $flag, $content_id, $account) {
  // Disallow voting for anonymous users.

  // When a site gets flagged, track that action in the database.
  if ($action == 'flag' && in_array('site', $flag->types) && ($flag->name == 'sod' || $flag->name == 'sow' || $flag->name == 'som')) {
    // Determine the type of vote.
    switch ($flag->name) {
      case 'sod': $type = DWA_VOTING_SITE_TYPE_SOD; break;
      case 'sow': $type = DWA_VOTING_SITE_TYPE_SOW; break;
      case 'som': $type = DWA_VOTING_SITE_TYPE_SOM; break;
    }

    // Disallow voting if a user has already done so.
    // Unflag the site right after it has been flagged.
    // @see http://drupal.org/node/1008768#comment-3873374
    // This http://drupal.org/node/955724 didn't work.
    if (dwa_voting_voted($type, $account->uid)) {
      $flag->flag('unflag', $content_id, $account);
      switch ($flag->name) {
         case 'sod': $award_name = "Site of the Day"; break;
         case 'sow': $award_name = "Site of the Week"; break;
         case 'som': $award_name = "Site of the Month"; break;
      }
      $flag->flag_message = $flag->unflag_message = t('You can only cast 1 vote for "!award_name" per day.', array('!award_name' => $award_name));
      return;
    }
    
    $table = 'dwa_voting';
    $record = new stdClass();
    $record->uid = $account->uid;
    $record->nid = $content_id;
    $record->type = $type;
    $record->timestamp = time();
    drupal_write_record($table, &$record);
  }
}



/**
 * Check if a user has already cast a vote
 * for one of the awards.
 *
 * @param $type
 *   Type of vote.
 * @param $uid
 *   User Id (optional), defaults to logged-in user.
 */
function dwa_voting_voted($type = '', $uid = '') {
  // If no uid is passed, default to current user.
  if ($uid == '') {
    $uid = $GLOBALS['user']->uid;
  }
  
  // Make sure type is valid.
  $available_types = array(DWA_VOTING_SITE_TYPE_SOD,DWA_VOTING_SITE_TYPE_SOW,DWA_VOTING_SITE_TYPE_SOM);
  if (!in_array($type, $available_types)) {
    return false;
  }

  // Determine if the current user has already cast his vote for the site of the day.
  $query = db_select('dwa_voting', 'dv');
  $query->fields('dv', array('vid'));
  $query->condition('dv.uid', $uid);
  $query->condition('dv.type', $type);
  $query->range(0, 1);
  $result = $query->execute();
  return $result->fetchField();
}
